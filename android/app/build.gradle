apply plugin: 'com.android.application'

// Define version values at build script level
def packageVersion = "1.2.0"
def packageVersionCode = 10200

// Try to read from package.json, but use fallbacks if it fails
try {
    def packageJsonFile = file('../../package.json')
    if (packageJsonFile.exists()) {
        def packageJson = new groovy.json.JsonSlurper().parseText(packageJsonFile.text)
        if (packageJson.version) {
            packageVersion = packageJson.version
            def parts = packageVersion.split('\\.')
            if (parts.length >= 3) {
                packageVersionCode = (parts[0] as Integer) * 10000 + (parts[1] as Integer) * 100 + (parts[2] as Integer)
            }
        }
    }
} catch (Exception e) {
    println "Warning: Could not read version from package.json: ${e.message}"
    println "Using fallback values: version=${packageVersion}, code=${packageVersionCode}"
}

println "Final version values: name=${packageVersion}, code=${packageVersionCode}"

android {
    namespace "io.github.lelinhtinh.scoreboard"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "io.github.lelinhtinh.scoreboard"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode packageVersionCode
        versionName packageVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
